@import "helpers/selector-types";
@import "helpers/lists";

//***************************************************************************************************\
//                                                                    | Helper Functions
//***************************************************************************************************/

// this function will take a selector and append a simple selector to it
// in such a way that element selectors remain at the beginning and
// pseudo selectors remain at the end.
@function smart-append-selector($sel, $class) {
	$elems: simple-selectors($sel);
	$first: nth($elems, 1);
	$last: nth($elems, -1);

	@if is-pseudo-selector($class) {
		// if the last element is a pseudo-element, we have to make sure it stays in the last position
		@if is-pseudo-element($last) {
			// can this be simplified at all?
			// grab all but the last element and tack on the new class
			$init: #{implode(list-slice($elems, 1, -2))}#{$class};
			// if what we're appending is *also* a pseudo-element, we're just going to drop the old one,
			// effectively replacing it with the new one
			@if is-pseudo-element($class) {
				@warn "This selector already has a pseudo element of #{$last}, replacing it with #{$class}";
				@return #{$init};
			// otherwise, it is safe to tack on the old one at the end
			} @else {
				@return #{$init}#{$last};
			}
		// otherwise, we can just tack it onto the end
		} @else {
			@return #{$sel}#{$class};
		}
	// if an element selector is first, we have to tack on the class after that
	} @else if is-elem-selector($first) {
		@return #{$first}#{$class}#{implode(list-slice($sel, 2))};
	// otherwise the class can go first
	} @else {
		@return #{$class}#{$sel};
	}
}

//***************************************************************************************************\
//                                                                    | Helper Mixin
//***************************************************************************************************/

@mixin nth-append-selector($n, $sel) {
	@at-root #{selector-nth(&, $n, 'smart-append-selector', $sel)} {
		@content;
	}
}
